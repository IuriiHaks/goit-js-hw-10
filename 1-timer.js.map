{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  startBtn: document.querySelector('button[data-start]'),\n  dateTimePicker: document.querySelector('#datetime-picker'),\n  daysSpan: document.querySelector('[data-days]'),\n  hoursSpan: document.querySelector('[data-hours]'),\n  minutesSpan: document.querySelector('[data-minutes]'),\n  secondsSpan: document.querySelector('[data-seconds]'),\n};\n\nlet selectedDate = null;\nlet intervalId = null;\n\nrefs.startBtn.disabled = true;\n\nconst fp = flatpickr(refs.dateTimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const now = new Date();\n    selectedDate = selectedDates[0];\n\n    if (selectedDate <= now) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      refs.startBtn.disabled = true;\n    } else {\n      refs.startBtn.disabled = false;\n    }\n  },\n});\n\nrefs.startBtn.addEventListener('click', onStart);\n\nfunction onStart() {\n  refs.startBtn.disabled = true;\n  refs.dateTimePicker.disabled = true;\n\n  intervalId = setInterval(() => {\n    const now = new Date();\n    const delta = selectedDate - now;\n\n    if (delta <= 0) {\n      clearInterval(intervalId);\n      updateTimerUI(0);\n      iziToast.success({\n        title: 'Done',\n        message: 'Countdown finished!',\n        position: 'topRight',\n      });\n      refs.dateTimePicker.disabled = false;\n      return;\n    }\n\n    updateTimerUI(delta);\n  }, 1000);\n}\n\nfunction updateTimerUI(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  refs.daysSpan.textContent = addLeadingZero(days);\n  refs.hoursSpan.textContent = addLeadingZero(hours);\n  refs.minutesSpan.textContent = addLeadingZero(minutes);\n  refs.secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor((ms % hour) / minute),\n    seconds: Math.floor((ms % minute) / second),\n  };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["refs","selectedDate","intervalId","flatpickr","selectedDates","now","iziToast","onStart","delta","updateTimerUI","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"+IAKA,MAAMA,EAAO,CACX,SAAU,SAAS,cAAc,oBAAoB,EACrD,eAAgB,SAAS,cAAc,kBAAkB,EACzD,SAAU,SAAS,cAAc,aAAa,EAC9C,UAAW,SAAS,cAAc,cAAc,EAChD,YAAa,SAAS,cAAc,gBAAgB,EACpD,YAAa,SAAS,cAAc,gBAAgB,CACtD,EAEA,IAAIC,EAAe,KACfC,EAAa,KAEjBF,EAAK,SAAS,SAAW,GAEdG,EAAUH,EAAK,eAAgB,CACxC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQI,EAAe,CACrB,MAAMC,EAAM,IAAI,KAChBJ,EAAeG,EAAc,CAAC,EAE1BH,GAAgBI,GAClBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDN,EAAK,SAAS,SAAW,IAEzBA,EAAK,SAAS,SAAW,EAE5B,CACH,CAAC,EAEDA,EAAK,SAAS,iBAAiB,QAASO,CAAO,EAE/C,SAASA,GAAU,CACjBP,EAAK,SAAS,SAAW,GACzBA,EAAK,eAAe,SAAW,GAE/BE,EAAa,YAAY,IAAM,CAE7B,MAAMM,EAAQP,EADF,IAAI,KAGhB,GAAIO,GAAS,EAAG,CACd,cAAcN,CAAU,EACxBO,EAAc,CAAC,EACfH,EAAS,QAAQ,CACf,MAAO,OACP,QAAS,sBACT,SAAU,UAClB,CAAO,EACDN,EAAK,eAAe,SAAW,GAC/B,MACD,CAEDS,EAAcD,CAAK,CACpB,EAAE,GAAI,CACT,CAEA,SAASC,EAAcC,EAAI,CACzB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EAEtDV,EAAK,SAAS,YAAcgB,EAAeL,CAAI,EAC/CX,EAAK,UAAU,YAAcgB,EAAeJ,CAAK,EACjDZ,EAAK,YAAY,YAAcgB,EAAeH,CAAO,EACrDb,EAAK,YAAY,YAAcgB,EAAeF,CAAO,CACvD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAOA,EAAK,KAAQ,GAAM,EACxC,QAAS,KAAK,MAAOA,EAAK,IAAU,GAAM,CAC9C,CACA,CAEA,SAASM,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}